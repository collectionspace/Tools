##################################################################################
#
# CRON TABLE (crontab) for CSpace Tricoder and BMU-related jobs
# Also: Piction interfact maintenance, UCJEPS CCH, Cinefiles QC
# BAMPFA Drupal extract push, and other monitoring tasks
#
##################################################################################
#
# BMU-related jobs
#
##################################################################################
# BMU monitoring / report (i.e. send nightly emails)
##################################################################################
# NB: BAM no longer uses the BMU: derivatives from Piction are pushed to CSpace
10   5 * * * for t in botgarden cinefiles pahma ucjeps; do perl /home/app_webapps/$t/uploadmedia/checkRuns.pl  jobs /tmp/image_upload_cache_$t  | expand -12 | mail -s "recent $t BMU jobs" jblowe@berkeley.edu ; done
10   5 * * * perl /home/app_webapps/pahma/uploadmedia/checkRuns.pl  jobs /tmp/image_upload_cache_pahma  | expand -12 | mail -s "recent PAHMA BMU jobs" pahma-cspace-bmu@lists.berkeley.edu > /dev/null 2>&1
10   5 * * * perl /home/app_webapps/ucjeps/uploadmedia/checkRuns.pl jobs /tmp/image_upload_cache_ucjeps | expand -12 | mail -s "recent UCJEPS BMU jobs" herb_cspace_reports@lists.berkeley.edu > /dev/null 2>&1
10  5 * * * perl /home/app_webapps/cinefiles/uploadmedia/checkRuns.pl jobs /tmp/image_upload_cache_cinefiles | expand -12 | mail -s "recent Cinefiles BMU jobs" bampfacspaceuploader@lists.berkeley.edu > /dev/null 2>&1
# 10  5 * * * perl /home/app_webapps/botgarden/uploadmedia/checkRuns.pl jobs /tmp/image_upload_cache_botgarden | expand -12 | mail -s "recent UCBG BMU jobs" tadditon@lists.berkeley.edu > /dev/null 2>&1
##################################################################################
# run BMU batch jobs (nightly or twice a day depending)
##################################################################################
# run PAHMA BMU (one minute after 7pm)
01 19   * * * shopt -s nullglob; for f in /tmp/image_upload_cache_pahma/*.step1.csv; do f=$(echo $f | sed -e 's/\.step1.csv//') ; { time /var/www/pahma/uploadmedia/postblob.sh pahma $f pahma_Uploadmedia_Prod ; } >> /tmp/image_upload_cache_pahma/batches.log 2>&1 ; done
# run UCJEPS BMU (one minute after the hour, noon and 8pm)
10 12,20 * * * shopt -s nullglob; for f in /tmp/image_upload_cache_ucjeps/*.step1.csv; do f=$(echo $f | sed -e 's/\.step1.csv//') ; { time /var/www/ucjeps/uploadmedia/postblob.sh ucjeps $f ucjeps_Uploadmedia_Prod ; } >> /tmp/image_upload_cache_ucjeps/batches.log 2>&1 ; done
# run Cinefiles BMU
10 15,22 * * * shopt -s nullglob; for f in /tmp/image_upload_cache_cinefiles/*.step1.csv; do f=$(echo $f | sed -e 's/\.step1.csv//') ; { time /var/www/cinefiles/uploadmedia/postblob.sh cinefiles $f cinefiles_Uploadmedia_Prod ; } >> /tmp/image_upload_cache_cinefiles/batches.log 2>&1 ; done
# run BAMPFA BMU (currently a no-op -- they now use Piction)
#30 * * * * shopt -s nullglob; for f in /tmp/image_upload_cache_bampfa/*.step1.csv; do f=$(echo $f | sed -e 's/\.step1.csv//') ; { time /var/www/bampfa/uploadmedia/postblob.sh $f ; } >> /tmp/image_upload_cache_bampfa/batches.log 2>&1 ; done
# run UCBG BMU
10 16,23 * * * shopt -s nullglob; for f in /tmp/image_upload_cache_botgarden/*.step1.csv; do f=$(echo $f | sed -e 's/\.step1.csv//') ; { time /var/www/botgarden/uploadmedia/postblob.sh botgarden $f botgarden_Uploadmedia_Prod ; } >> /tmp/image_upload_cache_botgarden/batches.log 2>&1 ; done
##################################################################################
# clean up the BMU temp directories (erase images more than 48 hours old)
##################################################################################
1 5 * * * for t in bampfa botgarden cinefiles pahma ucjeps; do ~/bin/cleanBMUtempdir.sh $t >> ~/monitor/${t}.imagedircleanup.log ; done
##################################################################################
# run the tricoder upload job (with locks) weekdays 9am-6pm, 3 mins after the hour
# clean up temp files that sometime get left behind.
##################################################################################
3 9-18 * * 1-5 /home/app_webapps/batch_barcode/tricoderlock.sh > /dev/null 2>&1
##################################################################################
# clean up untidy messes left by tricoder
##################################################################################
1 5 * * * cd /tmp ; ls /tmp | perl -ne "print if /^\d+$/" | xargs rm > /dev/null 2>&1
##################################################################################
# update BAMPFA's materialized view for Piction
##################################################################################
0 18 * * * foo=`psql -d "host=dba-postgres-prod-42.ist.berkeley.edu dbname=piction_transit port=5415 sslmode=prefer" -U "piction" -c "refresh materialized view piction.bampfa_metadata_mv" 2>&1` ; if [[ $foo != "REFRESH MATERIALIZED VIEW" ]] ; then echo "$foo" | mail -s "PROBLEM with Piction mv update status on Prod" cspace-app-logs@lists.berkeley.edu ; fi
##################################################################################
# keep a set of the BMU log files
##################################################################################
5 6 * * *  for t in bampfa botgarden cinefiles pahma ucjeps; do cp -p /tmp/image_upload_cache_${t}/*.csv /home/app_webapps/monitor/image_upload_cache_${t}/ > /dev/null 2>&1 ; cp -p /tmp/image_upload_cache_${t}/*.trace.log /home/app_webapps/monitor/image_upload_cache_${t}/ > /dev/null 2>&1 ; done
##################################################################################
# monitor imageserver caches
##################################################################################
0 4 * * 1 cd /home/app_webapps/monitor ; for t in bampfa botgarden cinefiles pahma ucjeps; do ./monitorImageCache.sh ~/cache/$t > report.txt 2>&1 ; cat report.txt | mail -s "image cache status" -- cspace-app-logs@lists.berkeley.edu ; done
0 4 * * * cd /home/app_webapps/monitor ; for t in bampfa botgarden cinefiles pahma ucjeps; do python checkCache.py ~/cache/$t >> $t.imagecache.log ; done
##################################################################################
# run the UCJEPS jobs weekly
##################################################################################
00 5 * * 5 /home/app_webapps/bin/major_group.sh > /dev/null 2>&1
00 6 * * 5 /home/app_webapps/bin/cch_extract.sh > /dev/null 2>&1
00 7 * * 5 /home/app_webapps/bin/get_taxonauth.sh taxon > /dev/null 2>&1
00 8 * * 5 /home/app_webapps/bin/get_taxonauth.sh unverified > /dev/null 2>&1
30 8 * * * /home/app_webapps/bin/rsync2annie.sh > /dev/null 2>&1
##################################################################################
# refresh the denormalized hierarchies
##################################################################################
01 1 * * * ~/hierarchies/refresh.sh pahma > /dev/null 2>&1
15 1 * * * cd ~/hierarchies ; ./docounts.sh > /dev/null 2>&1 ; ./checkstatus.sh pahma | mail -s "hierarchies refresh" mtblack@berkeley.edu
##################################################################################
# run the cinefiles month qc report
##################################################################################
00 03 1 * * /home/app_webapps/bin/qc/monthly.sh cinefiles_reports@lists.berkeley.edu > /dev/null 2>&1
10 03 1 * * /home/app_webapps/bin/qc/monthly.sh cspace-app-logs@lists.berkeley.edu > /dev/null 2>&1
##################################################################################
# run the nightly bampfa extract for the drupal website
##################################################################################
01 05 * * * cd ~/extracts/bampfa ; /home/app_webapps/extracts/bampfa/bampfa_website_extract.sh bampfa >> bampfa_website_extract.log 2>&1
##################################################################################
# monitor webapp use
################################################################################
5 07-20 * * * perl -ne 'next if /^(start|POST|PUT)/;s/\r//;s/elapsedtime= *//;s/\t[a-z]+=/\t/g;print;' /tmp/dj.tools-prod.csv | awk -v OFS="\t" -F"\t" '{print $2,$5,$3,$7,$1,$6,$10,$8,$9}' > ~/monitor/currappuse.csv ; cat ~/monitor/currappuse.csv ~/monitor/webappuse.csv | sort -u > /tmp/tmp2 ; mv /tmp/tmp2 ~/monitor/webappuse.csv ; perl ~/monitor/monitorWebapps.pl ~/monitor/webappuse.csv > /var/www/static/webappuse.html
# analyze and summarize the django logs, keep a copy of an extract of the other vhost logs
5 04 * * * cd ~/monitor ; ./analyze.sh > /dev/null 2>&1 ; ./keep.apache.logs.sh > /dev/null 2>&1
